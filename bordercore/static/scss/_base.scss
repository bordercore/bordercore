* {
  --border-radius1: 0.25rem; // bootstrap default, defined by $border-radius
  --border-radius2: 0.40rem;
  --collection-list-item-width: 12rem;
  --dropdown-height: 2.5rem;
  --grid-margin: 1rem;
  --hover-bg: var(--surface1);
  --hover-bg-transparent: var(--surface1-transparent);
  --search-box-width: 30rem;
}

// The overflow:hidden eliminates the horizontal scrollbar when
//  setting the padding to 0px on the main fluid container
//  https://stackoverflow.com/questions/37978307/bootstrap-container-fluid-padding/50005919
.container-fluid {
  overflow: hidden;
  padding: 0;
}

// Use this to avoid layout shift caused by scrollbars
.scroll-container {
  overflow: scroll;

  @supports (scrollbar-gutter: stable) {
    overflow: auto;
    scrollbar-gutter: stable;
  }
}

// Used on the last block in a flex column to extend to the bottom of the page
.extend-block {
  flex: 1 0 auto;
}

// Use this to create Flexbox containers of equal width
.flex-even {
  flex: 1;
}

.flex-grow-last > div:last-child {
  flex-grow: 1;
}

.card-title {
  color: var(--text4);
  font-size: 1.2rem;

  a {
    color: var(--text4);
  }
}

.card-grid {
  padding: 0 calc(var(--grid-margin) * 0.5);
  margin: 0 0 var(--grid-margin);
}

.editable-textarea {
  textarea {
    background-color: var(--surface5);
    color: var(--text1);
  }
  label p:last-child {
    margin-bottom: 0;
  }
}

[hidden] {
  display: none !important;
}

.hidden {
  display: none;
}

.message-error {
  background: linear-gradient(90deg, rgba(121,9,9,1) 0%, rgba(38,34,70,1) 54%);
  background-color: #262246;

  strong {
    color: var(--text3);
  }
}

.message-info {
  background: rgb(16,49,58);
  background: linear-gradient(90deg, rgba(16,49,58,1) 0%, rgba(38,34,70,1) 100%);

  strong {
    color: var(--text3);
  }
}

//
// Drag and Drop
//

// Override default Sortable classes
.sortable-drag {
  background-color: var(--surface5);
}

// Drag and drop not controlled by Sortable uses
//  this class (eg Buefy tables)
.dragging {
  background-color: var(--surface5) !important;
}


/* Used to hide mustached content before Vue has loaded */
[v-cloak] {
  display: none;
}

::-webkit-scrollbar {
  width: 0.5rem;
}

::-webkit-scrollbar-track {
  border-radius: 0.6rem;
}

::-webkit-scrollbar-thumb {
  background-color: var(--surface3);
  border-radius: 0.6rem;
}

::-webkit-scrollbar-thumb:hover {
  background-color: var(--surface5);
}

.close-button {
  color: var(--text3);
}

.object-select-suggestion {
  height: 4.7rem;
  padding: 0.6rem;

  .cover-image {
    width: calc(4.7rem - 2*0.6rem);
    height: calc(4.7rem - 2*0.6rem);
  }

  .date {
    color: var(--text2);
    font-size: small;
  }

  .matched {
    color: $primary;
  }
}

.object-select-misc-item-below {
  background-color: var(--surface2);
  color: var(--text1);

  strong {
    color: $primary;
  }
}

//
// Fonts
//

@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/Roboto-Regular.ttf") format("truetype");
}

@font-face {
  font-family: "Lato";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/Lato-Regular.ttf") format("truetype");
}

//
// Common selectors
//

body {
  min-height: 100vh;
  background-size: cover;
  font-family: "Lato", sans-serif;
  line-height: 2rem;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Roboto", sans-serif;
}

a {
  color: var(--text2);
  text-decoration-color: transparent;
  text-underline-offset: 0.25rem;

  &:hover {
    color: var(--text5);
  }
}

hr {
  background-color: $primary;
}

// Override Bootstrap's CSS

.badge {
  background-color: var(--surface5);
}

.btn-close {
  // Mimics the Bootstrap "btn-close-white" class
  -webkit-filter: var(--btn-close-filter);
  filter: var(--btn-close-filter);
}

.btn-primary {
  background-color: var(--surface1);
  color: var(--text1);

  &:hover {
    background-color: var(--surface5);
    color: var(--btn-primary-hover-color);
  }
}

.btn-secondary {
  background-color: var(--surface6);
  color: var(--text1);

  &:hover {
    background-color: var(--surface5);
  }
}

.btn-group {
  padding: 0.25rem !important;

  .btn {
    line-height: 1.0;
    &:focus {
      box-shadow: none !important;
      outline: none !important;
    }
  }

  :not(.active):hover {
    color: var(--text1);
    transform: translateY(-0.06rem);
  }

  :not(.active) {
    background-color: var(--surface1);
  }
}

em {
  color: var(--text3);
}

input[type="radio"],
input[type="checkbox"] {
  width: 1em;
  height: 1rem;
  accent-color: var(--text3);
}

hr.divider {
  height: 0.15rem;
  background-color: var(--surface7);
}

p {
  font-size: 1.25em;
}

strong {
  color: var(--text4);
}

i,
span {
  display: inline-block;
}

.selected {
  background-color: var(--surface5) !important;
  border-radius: var(--border-radius1);
  color: var(--selected-color) !important;

  a {
    color: var(--selected-color) !important;
  }

  .text-secondary {
    color: var(--selected-secondary-color) !important;
  }

  // The first and last cells of any selected row are highlighted
  @extend .hoverable-cells;
}

.icon-hover {
  color: var(--text3);
  &:hover {
    transform: scale(1.1);
  }
}

//
// Lists
//

.list-group-item {
  color: var(--text1);
}

.list-group-item-secondary {
  background-color: var(--surface1);
  color: var(--text3);
}

// A list with only interior borders
.interior-borders {
  li:first-child {
    border-top: none;
  }

  li:last-child {
    border-bottom: none;
  }

  li {
    border-right: none;
    border-left: none;
  }
}

// A list with separate a "name" and "value"
.item-name {
  color: var(--text2);
}

.item-value {
  color: var(--text1);
}

//
// Helper classes
//

.w-20 {
  width: 20%;
}

.vh-50 {
  height: 50vh;
}

.text-emphasis {
  color: var(--text1);
}

.text-notice {
  color: var(--text-notice);
}

.text-small {
  font-size: 0.75rem;
}

.text-secondary {
  color: var(--text3);
}

.z-index-positive {
  z-index: 10 !important;
}

// CSS Transitions
.fade-enter-active,
.fade-leave-active {
  transition: opacity 1.0s ease;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}

.highlight-box {
  padding: 1em;
  background: var(--surface1);
  border-radius: 0.7rem;
  box-shadow: 0.06rem 0.06rem 0.31rem var(--surface4), -0.06rem -0.06rem 0.31rem var(--surface4);
}

.notice-big {
  background-color: var(--surface5);
  color: var(--notice-color);

  div.message {
    color: var(--notice-title-color);
  }

  .message {
    color: var(--text1);
  }
}

.list-header-border {
  border-bottom: 0.25rem solid var(--surface7);
}

.circle {
  display: flex;
  width: 2.5rem;
  height: 2.5rem;
  align-items: center;
  justify-content: center;
  padding: 0;
  border: none;
  background-color: $info;
  border-radius: 1.5rem;
  color: var(--text1);
}

.button-icon {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  border-color: var(--text1);
  background-color: var(--surface2);
  border-radius: 0.375rem;
  box-shadow: 0 0.25rem 0.37rem var(--surface7), 0 0.06rem 0.18rem var(--surface7);

  &:hover {
    transform: translateY(-0.06rem);
  }
}

.button-add-container {
  position: absolute;
  top: 0.5rem;
  right: 1rem;
}

.button-add {
  @extend .circle;
  color: inherit;
  cursor: pointer;
  font: inherit;
  transition: transform 250ms;

  &:hover {
    background-color: var(--surface3);
    color: var(--text1);
    transform: translateY(-0.25rem);

    .fa-plus {
      color: var(--text1);
    }
  }

  &:focus {
    color: var(--text1);
    outline: 0;
  }
}

// Add an "on hover" glow effect to images, noteably SVG font-awesome icons
.glow {
  &:hover {
    filter: drop-shadow(0.12rem 0.12rem 0.62rem var(--text3)) drop-shadow(-0.12rem -0.12rem 0.62rem var(--text3));
  }
}

.icon-disabled {
  color: var(--text-disabled);
}

// Lists

.list-with-counts {
  border-radius: var(--border-radius1);
  a {
    color: var(--text1);
  }

  &:hover {
    background-color: var(--hover-bg);
    cursor: pointer;
  }

  span.badge {
    background-color: var(--surface5);
  }
}

li {
  &.important {
    background-color: var(--surface3);
  }
}

a.tag {
  &:link {
    color: var(--text1);
  }

  &:visited {
    color: var(--text1);
  }

  &:hover {
    color: var(--text1);
  }
}

// Modals

.modal-header {
  color: var(--text3);
  font-size: 1.5rem;

  // The close button for Bootstrap modals
  .close {
    color: var(--text1);
  }
}

.modal-content {
  border: 0.12rem solid var(--text4);
  background-color: var(--surface6);
}

.pagination {
  box-shadow: 0 0.25rem 0.37rem var(--surface7), 0 0.06rem 0.18rem var(--surface7);
}

.pagination-divider {
  display: flex;
  width: 0.1rem;
  align-items: center;
  background-color: $pagination-bg;

  div {
    background-color: var(--surface7);
  }
}

.scrollable-panel-container {
  height: 92vh;
}

// Show vertical scrollbar if necessary.
// Hide horizontal scrollbar.
.scrollable-panel {
  overflow-x: hidden;
  overflow-y: auto;
}

// Hide all scrollbars by default.
// Reveal vertical scrollbar on hover.
.scrollable-panel-scrollbar-hover {
  overflow: hidden;

  &:hover {
    // "overlay" not supported by Firefox
    @supports not( -moz-appearance:none ) {
      overflow-y: overlay;
    }
    @supports ( -moz-appearance:none ) {
      overflow-y: auto;
    }
  }
}

// Buefy tables

.is-invisible {
  display: none !important;
}

.b-table {
  .icon {
    transition: transform 150ms ease-out, opacity 86ms ease-out;
    &.is-desc {
      transform: rotate(180deg);
    }
    &.is-expanded {
      transform: rotate(90deg);
    }
  }

  thead {
    border-bottom: 0.25rem solid var(--surface3);
  }

  th {
    border-top: none;
    color: $primary;

    .sort-icon {
      margin-left: 0.5rem;
      color: var(--text2);
      font-size: 0.62rem;
    }
  }

  td {
    vertical-align: middle;
  }

  table.is-hoverable tr {
    @extend .hoverable-cells;
  }
}

.table-borderless td,
.table-borderless th {
  padding: 0.6rem;
  border: 0;
}

.hoverable-cells {
  &:hover {
    background-color: var(--hover-bg);
    td:nth-child(1) {
      border-bottom-left-radius: var(--border-radius2);
      border-top-left-radius: var(--border-radius2);
    }
    td:nth-last-child(1) {
      border-bottom-right-radius: var(--border-radius2);
      border-top-right-radius: var(--border-radius2);
    }
  }
}

.hoverable {
  border-radius: var(--border-radius2);

  &:hover {
    background-color: var(--hover-bg);
  }
}

.list-delete {
  display: none;
  color: var(--text1);

  &:hover {
    transform: scale(1.1);

    @extend .close-button;
  }
}

.fader::after {
  position: absolute;
  z-index: 10000;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 4em;
  background-image: linear-gradient(to bottom, var(--surface2-transparent), var(--surface2) 90%);
  content: "";
  pointer-events: none;
}

.toast-wrapper {
  z-index: 100;
  line-height: 1.5rem;

  .toast-header {
    background-color: var(--surface6);
    color: var(--text1);

    button {
      color: var(--text1);
    }
  }

  .toast-body {
    background-color: var(--surface1);
  }

  &.danger {
    .toast-header {
      background-color: $danger;
      color: $black;
      strong {
        color: $black;
      }
    }
    .toast-body {
      background: tint-color($danger, 50%);
      color: $black;
      a {
        color: $danger;
      }
    }
  }

  &.warning {
    .toast-header {
      background-color: $warning;
      color: $black;
    }
  }
}

input.form-control,
select.form-control,
textarea.form-control {
  border: 0.06rem solid var(--surface1);
  background-color: var(--form-bg);
  color: var(--text4) !important;

  &:hover {
    border-color: var(--form-border-color-hover);
  }

  &:focus {
    border-color: var(--form-border-color-hover);
    background-color: var(--form-bg-focus);
    color: var(--text4);
  }

  &:disabled {
    background-color: var(--form-bg-disabled);
  }
}

.input-group-text {
  border: 0.06rem solid var(--surface6);
  background-color: var(--surface6);
  border-radius: var(--border-radius1);
  color: var(--text1);
}

.tag, .ti-input .ti-tag {
  padding: 0 0.3rem 0.18rem 0.3rem !important;
  border: 0.12rem solid var(--surface5);
  margin: 0 0.12rem 0 0.12rem !important;
  background-color: var(--surface6) !important;
  border-radius: 1.5rem !important;
  color: var(--text4) !important;
  line-height: 1.5rem;
  white-space: nowrap;

  &:hover {
    background-color: var(--text4) !important;
    color: var(--surface6) !important;
    text-decoration: none;

    strong, svg {
      color: var(--surface6) !important;
    }
  }

  svg:hover {
    color: var(--surface1) !important;
  }
}

// From Bootstrap scss/_variables.scss
.card-box-shadow {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 0.25rem 0.37rem, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -0.18rem 0.31rem;
}

// Base Template

#content {
  width: 100%;
  min-height: 100vh;
  transition: all 0.3s;
}

// Use this to reveal hidden targets on-hover
.hover-reveal-target:hover {
  .hover-reveal-object {
    display: flex !important;
    height: var(--dropdown-height);
  }
}

// Dropdown Menus

.dropdown-menu {
  background-color: var(--surface6);
}

.dropdown:not(.top-drop-down) {
  min-width: var(--dropdown-height);
  min-height: var(--dropdown-height);
}

.hover-target:hover {
  .dropdown > div {
    display: flex !important;
  }
}

.dropdown-menu-container {
  height: var(--dropdown-height);
}

.dropdown {
  .dropdown-menu {
    top: 0.6rem !important;
    transition: all 500ms cubic-bezier(0.53, 2, 0.36, 0.85);
  }
  li {
    margin-right: 0.5rem;
    margin-left: 0.5rem;
  }
}

.dropdown-item {
  border-radius: var(--border-radius1);
  color: var(--text1);

  span {
    svg {
      width: 1rem !important;
    }
  }

  &:hover {
    background-color: var(--surface2) !important;
    color: var(--text1);
  }
}

// Add this to any div that needs to be at least as tall
//  as the dropdown target, to avoid on-hover jitter
.dropdown-height {
  min-height: var(--dropdown-height);
}

// Extra content after the dropdown item's name
.dropdown-item-extra {
  width: 1.25rem;
  height: 1.25rem;
  padding-top: 0.25rem;
  background-color: var(--surface5);
  border-radius: 50%;
  color: var(--dropdown-item-extra-color);
  font-size: 0.75rem;
  font-weight: bold;
  line-height: 0.75rem;
  text-align: center;
}

.option-icon {
  display: flex;
  width: 2.5rem;
  min-width: 2.5rem;
  height: 2.5rem;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  font-size: 1.2rem;
  &:hover {
    background-color: var(--hover-bg);
    cursor: pointer;
    transform: translateY(-0.06rem);
  }
  &.enabled {
    background-color: #var(--surface5);
  }
}

// The round, target point that spawns the dropdown menu below it
.dropdownmenu {
  display: flex;
  width: var(--dropdown-height);
  height: var(--dropdown-height);
  margin-left: auto; // Push to the right
  font-size: 1rem;

  &.calendar-date-format-menu {
    // If we add this class, don't push to the right
    margin-left: none;
  }

  &:hover {
    background-color: var(--hover-bg);
    border-radius: 100%;
  }
}

// Error pages

.response-code {
  margin-bottom: 2rem;
  font-size: 6.25rem;
  font-weight: bold;
}

// Login page

.jumbotron {
  border: 0.12rem solid var(--text1);
  border-radius: 1.5rem;
  opacity: 0.9;
}

// Help

#modal-body-help {
  h1 {
    color: var(--text5);
    font-size: 1rem;
    text-transform: uppercase;
  }
  strong {
    color: var(--text3);
  }
  em {
    color: var(--text-em);
  }
}

//
// Tables
//

.table {
  border-color: var(--surface6);
  color: var(--text1);

  th {
    color: $primary;
  }
}

// Eliminate the focus effect when selecting a row or column
.b-table tr:focus,
.b-table th:focus {
  outline: 0;
}

.table-note {
  color: var(--text3);
  font-size: 0.75rem;

  p {
    margin-bottom: 0;
  }
}

table.b-table th {
  border-top: 0;
  color: var(--text3);
}

.table-hover tr.selected:hover a {
  background-color: rgba(0, 0, 0, 0.075);
  transition: none;
}

.table-borders table,
.table-borders td {
  padding: 0.6rem;
  border: 0.06rem solid var(--surface5);
}

.table-borders th {
  padding: 0.6rem;
  border-bottom: 0.18rem solid var(--surface5);
}

.table-colors {
  table {
    margin: 2rem 0 2rem;
  }
  table thead {
    color: $success;
  }
  table, th, td {
    border: 0.12rem solid $secondary;
  }
  table tbody {
    color: $primary;
  }
}

// Animated buttons

.glyphicon-refresh-animate {
  -animation: spin 0.7s infinite linear;
  -webkit-animation: spin2 0.7s infinite linear;
}

@-webkit-keyframes spin2 {
  from { -webkit-transform: rotate(0deg); }
  to { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  from { transform: scale(1) rotate(0deg); }
  to { transform: scale(1) rotate(360deg); }
}

// Bootstrap modifications

.breadcrumb {
  padding-left: 2.25rem;
  background-color: transparent;
}

// Modified from bootstrap/scss/_nav.scss
.nav-tabs, .nav {
  border-bottom-color: var(--surface5);

  &:hover, &:focus {
    color: var(--text5);
  }

  .nav-link {
    border: none;

    &:hover {
      color: var(--text5);
    }

    &.active {
      border-bottom: 0.18rem solid var(--text5);
      background-color: var(--surface6);
      color: var(--text1);

      // Modals have a different background, so we need the
      //  active tab to also have a different background
      &.tab-modal {
        background-color: var(--surface1);
      }
    }
  }
}

.card-body {
  @extend .card-box-shadow;
  position: relative;
  z-index: 1;
  flex-grow: 0;
  padding: 1.25rem;
  margin: 0 0.5rem 1rem 0.5rem;
  background-color: var(--surface2) !important;
  border-radius: 0.4rem;

  .side-panel {
    width: 18.75rem;
  }

  // Negate the default background for this class so that
  //  the transparency of the parent will take effect
  .list-group-item {
    background: none;
  }
}

@supports (backdrop-filter: blur(1.56rem) brightness(170%)) {
  .backdrop-filter {
    backdrop-filter: blur(1.56rem) brightness(170%);
    background: var(--surface1-transparent) !important;
  }
}

// Forms
.form-error {
  padding-top: 0.3rem;
  margin-left: 0.6rem;
  color: var(--text5);
  font-weight: bold;
}

.form-section {
  color: var(--text3);
  font-size: larger;
  font-weight: bold;
}

// Used when you want to display text instead of a form field
.form-no-input {
  padding: 0.4rem 1.25rem;
}

.input-group .highlight-changed-field {
  color: var(--text5);
}

.highlight-changed-field.color-transition {
  color: var(--text4);
  transition: 2s;
  transition-delay: 1s;
}

//
// Markdown
//

// This primarily applies to markdown generated by org-mode exported files.
//  Note the `white-space` selector to preserve newlines.

blockquote > p {
  padding: 0.5rem 0 0.5rem 0.5rem;
  border-left: 0.25rem solid var(--text3);
  margin: 0.5rem;
  background-color: var(--surface6);
  white-space: pre-line;
}

// Inline code. Exclude code in pre blocks, since
//  that is handled by prism.js

*:not(pre) > code {
  padding: 0.25rem 0.5rem 0.25rem 0.5rem;
  background-color: var(--surface6);
  color: var(--text6);
}

// Top Title

#top-title {
  padding-left: var(--grid-margin);
  font-size: 2rem;
  line-height: 2.7rem;
}

//
// Top Search
//

#top-search {
  position: absolute;
  z-index: 1000;
  top: -1.25rem;
  right: 0.25rem;
  line-height: 1.5rem;
}

#top-bar {
  @extend .card-box-shadow;
  margin: var(--grid-margin) var(--grid-margin) var(--grid-margin) var(--grid-margin);
  background-color: var(--surface1);
  border-radius: 0.4rem;
}

#top-bar input {
  width: 25rem;
  border-radius: 10em;
  cursor: pointer;
}

#top-bar input:focus {
  width: 25rem;
  padding-left: 2rem;
  border-color: var(--form-border-color-hover);
  background-color: var(--form-bg);
  color: var(--text4);
  cursor: auto;
}

#top-search-filter {
  position: absolute;
  top: 0.23rem;
  right: 1rem;
  text-align: center;

  i {
    position: relative;
    top: .12rem;
  }
}

.top-search-object-type {
  color: var(--text3);
}

.top-search-splitter {
  width: 100%;
  padding: 0.6rem;
  background-color: var(--surface6);
  color: var(--text1);
  cursor: auto;
  font-size: larger;
  font-weight: bold;
}

.top-search-suggestion {
  overflow: hidden;
  width: 100%;
  padding: 0.6rem;
  text-overflow: ellipsis;
  white-space: nowrap;

  svg {
    margin-top: 0.1rem;
  }

  .matched {
    color: $primary;
  }
}

#top-search-filter-options {
  position: absolute;
  z-index: 1000;
  width: 23rem;
  background-color: var(--surface2);
  border-radius: 0.4rem;
  box-shadow: rgba(0, 0, 0, 0.56) 0 1.37rem 4.37rem 0.25rem;

  svg {
    color: var(--text3);
  }

  .top-search-filter-icon {
    width: 1.5rem;
  }

  .tag-list:hover {
    background-color: var(--surface5);
  }

  .recent-searches-header {
    border-top: 0.06rem solid var(--surface1);
  }
}

.suggestion-item-disabled {
  cursor: not-allowed;
}

.search-with-doctypes {
  // Set the padding to zero so that we can programmatically control the background color lower down
  //   in the container hierarchy, based on whether an item is a divider or not.
  .list-group-item {
    padding: 0;
    border: 0.06rem solid var(--surface5);
  }

  .vue-simple-suggest .suggestions {
    padding: 0;
  }
}

//
// Bookmarks
//

.hover-tag {
  border: 0.06rem solid var(--surface3);
  background-color: var(--surface2);
  color: var(--text5);
}

.bookmark-list {
  @extend .hoverable-cells;

  .date {
    text-align: right;
    vertical-align: text-bottom;
    white-space: nowrap;
  }

  .favicon {
    vertical-align: text-bottom;
  }

  .link {
    vertical-align: text-bottom;
  }

  .yt-hover-target {
    right: 0.3rem;
    bottom: 0.3rem;
  }
}


#bookmark-search-form {
  background-color: var(--surface1);
  border-radius: var(--border-radius2);
}


#bookmark-select-add {
  height: 2.5rem;
}

.monospaced {
  font-family: Courier, sans-serif;
}

// The "has-search" rules provide space for a Font Awesome
//  search icon inside a search input box

.has-search {
  // Specifies the distance between the search icon and where
  //   you start typing your search query
  .form-control {
    padding-left: 2.5rem !important;
  }

  // Absolutely position a search icon inside a search box.
  svg[data-icon="search"] {
    position: absolute;
    z-index: 2;
    top: 0.75rem;
    left: 0.75rem;
    display: block;
    line-height: 2.375rem;
    pointer-events: none;
    text-align: center;
  }
}

#bookmark-search-filter {
  font-size: 0.8rem;
}


//
// Search
//

.search-input {
  width: 25rem;
}

.search-result {
  padding: 0.5rem 1.5rem 0.5rem 1.5rem;
  border-bottom: 0.1rem solid var(--surface3);
  border-radius: var(--border-radius1);

  &:hover {
    background-color: var(--surface2);
  }

  h4 {
    .favorite {
      font-size: 1rem;
    }

    small {
      color: var(--surface5);
      font-size: 0.75rem;
    }
  }

  h5 {
    color: var(--text1);
    font-size: 1rem;

    em {
      color: var(--text-em);
    }
  }

  &.grid {
    width: 33%;
    border-bottom: 0;
  }
}

.search-result-date {
  color: var(--text2);
}

.search-result-header {
  color: var(--text3);
}

.search-todo-date {
  font-size: 0.5rem;
  font-weight: normal;
}

.bookmark-dropdown {
  width: 2.5rem;
}

#tag-filter-form select {
  line-height: 2rem;
}

//
// Blobs
//

.blob-list {
  .blob-content {
    overflow: hidden;
    height: 18.75rem;
    font-size: 0.25rem;
  }

  .blob-info {
    font-size: 0.6rem;
  }

  &:hover {
    background-color: var(--hover-bg);
  }
}

#blob-name {
  color: var(--text4);
}

#blob_subtitle {
  color: var(--text4);
}

.tree-menu {
  ul {
    padding-left: 1em;
    line-height: 1.5em;

    li::marker {
      color: var(--text6);
      content: "• ";
    }
  }

  a {
    color: var(--text6);
  }
}

.tree-folder a {
  color: var(--text4);
  font-weight: bold;
}

.hide-list-element {
  padding-left: 0;
  list-style-type: none;
}

#overlay {
  position: fixed;
  z-index: 150;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  max-width: 100%;
  max-height: 100%;
  background-color: $black;
}

.slide-show {
  position: fixed;
  z-index: 200;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  max-width: 100%;
  max-height: 100%;
  margin: auto;
  object-fit: contain;
}

#blob-note {
  p {
    margin-bottom: 0;
  }
}

#blob-detail-content {
  background-color: var(--surface1);
  border-radius: 0.4rem;
}

.blob-content {
  em {
    color: var(--text-em);
  }

  h1 {
    color: var(--text3);
    font-size: 2rem;
  }

  h2 {
    color: hsl(var(--text3-hue) var(--text3-saturation) calc(var(--text3-lightness) - 30%));
    font-size: 1.75rem;
  }

  h3 {
    color: hsl(var(--text3-hue) var(--text3-saturation) calc(var(--text3-lightness) - 40%));
    font-size: 1.5rem;
  }

  h4 {
    color: hsl(var(--text3-hue) var(--text3-saturation) calc(var(--text3-lightness) - 50%));
    font-size: 1.25rem;
  }

  h5 {
    color: hsl(var(--text3-hue) var(--text3-saturation) calc(var(--text3-lightness) - 60%));
    font-size: 1rem;
  }
}

.blob-detail-cover-image {
  height: 85vh;

  img {
    cursor: pointer;
    object-fit: contain;
    object-position: left top;
  }
}

.blob-detail-cover-image-with-content {
  width: 50%;
  padding-left: 1rem;
  margin-left: 1rem;
  float: right;

  img {
    cursor: pointer;
  }
}

.metadata-icon {
  color: var(--text1);
}

.recent-blobs {
  div {
    border-bottom: 0.25rem solid var(--surface7);
    margin-bottom: 1rem;
  }

  .icon {
    width: 4rem;
    height: 4rem;
    color: var(--text3);
  }
}

#blob-import-icon {
  width: 6.25rem;
}

div #dateapp {
  width: 10rem;
}

#date_year {
  width: 7rem;
}

#blob-tag-list {
  line-height: 2;
}

#blob-options {
  font-size: 0.75rem;
}

//
// Notes
//

.note-search-result {
  .note-content {
    overflow: hidden;
    height: 18.75rem;
    font-size: 1rem;

    h1,
    .h1 {
      font-size: 3rem * 0.3;
    }

    h2,
    .h2 {
      font-size: 2.5rem * 0.3;
    }

    h3,
    .h3 {
      font-size: 2rem * 0.3;
    }

    h4,
    .h4 {
      font-size: 1.40625rem * 0.3;
    }

    h5,
    .h5 {
      font-size: 1.171875rem * 0.3;
    }

    h6,
    .h6 {
      font-size: 0.9375rem * 0.3;
    }
  }

  .selected .fader::after {
    background-image: linear-gradient(to bottom, var(--surface5-transparent), var(--surface5) 90%) !important;
  }

  > li {
    border-top: 0.06rem solid var(--text3);

    &:hover {
      background-color: var(--hover-bg);

      .fader::after {
        // Note: the apparent "mismatch" between the two colors is intentional
        background-image: linear-gradient(to bottom, var(--surface5-transparent), var(--hover-bg) 90%);
      }
    }
  }
}

.note-content-truncated {
  overflow: hidden;
  max-height: 31.25rem;
}

//
// Todo
//

.tag-list {
  border-radius: var(--border-radius1);

  a {
    color: var(--text1);
  }

  &:hover {
    background-color: var(--hover-bg);
    cursor: pointer;
  }

  span.badge {
    background-color: var(--surface5);
  }
}

.todo-col-manual-sorting {
  width: 7rem;
}

.todo-col-priority {
  width: 7rem;
}

.todo-col-date {
  width: 8rem;
}

.col-action {
  width: 4rem;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-grab {
  cursor: -webkit-grab;
  cursor: -moz-grab;
}

//
// Fitness
//

.fitness-col-muscle-group {
  width: 10rem;
}

.fitness-col-frequency {
  width: 9rem;
}

.overdue {
  background-color: var(--surface6);

  span {
    color: $red;
  }
}

.last-active {
  width: 17rem;
}

#exercise-detail-chart {
  height: 25rem !important;
}

#muscles-targeted .small {
  font-size: 0.75rem;
}

//
// Sortable
//

.wide-list {
  span {
    width: 100%;
  }

  li {
    // Chrome adds unwanted corners to the edges of
    //   rounded elements during drag and drop, so only
    //   use rounded borders for Mozilla.
    @-moz-document url-prefix() {
      border-radius: 0.5rem;
    }

    &:hover {
      background-color: var(--hover-bg);

      .list-delete {
        display: block;
      }
    }
  }
}

//
// Node
//

.node-bookmark {
  height: 3.5rem;
}

.node-list-stats {
  font-size: 0.75rem;
}

.node-name {
  color: var(--text4);
}

.node-note {
  font-size: 0.87rem;
}

.node-color {
  height: 2rem;
  border-radius: 0.25rem;

  &.selected-color {
    border: 0.12rem solid var(--text1);
  }
}

.node-color-1 {
  background-color: var(--node-color-1) !important;
  transition: 0.3s ease;
  &:hover {
    background-color: var(--node-color-1-tinted) !important;
  }
}

.node-color-2 {
  background-color: var(--node-color-2) !important;
  transition: 0.3s ease;
  &:hover {
    background-color: var(--node-color-2-tinted) !important;
  }
}

.node-color-3 {
  background-color: var(--node-color-3) !important;
  transition: 0.3s ease;
  &:hover {
    background-color: var(--node-color-3-tinted) !important;
  }
}

.node-color-4 {
  background-color: var(--node-color-4) !important;
  transition: 0.3s ease;
  &:hover {
    background-color: var(--node-color-4-tinted) !important;
  }
}

.node-object-note {
  color: var(--text3);
  font-size: small;
}

.node-url a {
  color: var(--text1);
}

.node-drag-over {
  border-radius: 0.4rem;
  box-shadow: rgba(0, 0, 0, 0.56) 0 1.37rem 4.37rem 0.25rem;
}

//
// Metrics
//

.metric-test-result-popover {
  width: 50rem;
  max-width: 100%;
}

//
// Drill
//

#icon-list {
  padding-right: 2.25rem;
}

#pinned-tags .card-title {
  height: 2.5rem;
}

.favorite {
  color: #f00;
}

.progress-circle {
  circle.circle-partial {
    stroke: var(--drill-progress-circle-partial);
  }

  circle.circle-full {
    stroke: var(--drill-progress-circle-full);
  }

  text {
    fill: $primary;
  }
}

#modal-study {
  input.form-control {
    height: calc(1.5em + 0.75rem + 0.5rem);
    border-radius: 0.25rem;
    font-size: 0.8rem;
  }

  #tag-name {
    width: 20rem;
  }

  #study-random-count {
    width: 4rem;
  }

  #search-term {
    width: 45%;
  }

  #question-filter {
    width: 20rem;
  }
}

//
// Collections
//

.collection-container {
  width: var(--collection-list-item-width) + 3rem;
}

.collection {
  overflow: hidden;
  width: var(--collection-list-item-width);

  img {
    width: var(--collection-list-item-width);
    height: var(--collection-list-item-width);
    border-radius: 0.25rem;
  }

  .collection-cover-container {
    bottom: -1.15rem;
    left: 0.01rem;
    display: block;
    width: var(--collection-list-item-width);
    height: 1.15rem;
    background-color: rgba(50, 50, 50, 0.5);
    font-size: smaller;
    transition: bottom 250ms;
  }

  &:hover {
    .collection-cover-container {
      bottom: -0.01rem;
      display: block;
    }
  }
}

.collection-item {
  position: relative;

  .collection-item-name {
    display: -webkit-box;
    overflow: hidden;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
  .collection-item-delete {
    position: absolute;
    top: 0.35rem;
    right: 0.35rem;
    display: none;
  }

  &:hover {
    .collection-item-delete {
      display: block;
    }
  }
}

.collection-sortable li {
  width: 12.5rem;
  height: 12.5rem;
}

.collection_ghost_class {
  border-left: 0;
  opacity: 0;
}

hr.collection-list-divider {
  height: 0.3rem;
  background-color: var(--surface7);
}

#collection-list {
  border-radius: 0.6rem;
}

.collection-drag-over {
  background-color: var(--surface3);
}

.collection-slide-show-section {
  background-color: var(--surface6);
  border-radius: 0.7rem;
}

//
// Feeds
//

#feed-status {
  font-size: 1rem;
}

//
// Music
//

// Audio player controls

audio {
  width: 37.5rem;
  outline: none;
}

#audio_player audio {
  width: 25rem;
}

#album-list div {
  width: 12.31rem;
}

.album {
  width: 19rem;
}

#album-song-list {
  td[data-label="Rating"] {
    width: 8rem;
    padding-right: 0;
  }
}

.dupe-song-note {
  font-size: 0.75rem;
}

.rating {
  color: var(--text-disabled);
}

.rating-star-selected {
  color: var(--surface7);
}

.rating-star-hovered {
  color: var(--surface5);
}

tr.hover-target:hover {
  .rating-container {
    display: block !important;
  }
}

.v-md-editor {
  height: 35rem;
  background-color: var(--form-bg) !important;
  color: var(--text1) !important;

  .v-md-editor__main {
    border-radius: 0.25rem;

    &:focus-within {
      background-color: var(--form-bg-focus) !important;
      caret-color: var(--text4);
      color: var(--text4);
    }
  }

  textarea {
    background-color: var(--form-bg) !important;
    color: var(--text1) !important;
    font-size: 1rem !important;

    &:focus {
      background-color: var(--form-bg-focus) !important;
      caret-color: var(--text4);
      color: var(--text4);
    }
  }

  .v-md-editor__toolbar-item {
    color: var(--text1) !important;
    &:hover {
      color: var(--form-bg) !important;
    }
  }
}

.v-md-textarea-editor section {
  background-color: var(--form-bg);
}

// Tags
#tags-search {
  position: absolute;
  top: 2rem;
  right: .75rem;
  width: 12.5rem;
  box-shadow: 0.06rem 0.06rem 0.31rem var(--surface4), -0.06rem -0.06rem 0.31rem var(--surface4);
}

.related-tags {
  .count {
    font-size: 0.75rem;
  }
}

// Custom styles for vue-simple-suggest VUE typeahead component

// Original: https://unpkg.com/vue-simple-suggest/dist/styles.css

.vue-simple-suggest > ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

.vue-simple-suggest {
  position: relative;

  .input-wrapper input {
    padding-top: 0.375rem;
    padding-right: 0.75rem;
    padding-bottom: 0.375rem;
    border: 0.06rem solid var(--surface5);
    background-color: var(--form-bg);
    border-radius: 0.25rem;

    &:hover {
      border-color: var(--text3);
    }
  }

  &.focus {
    .input-wrapper input {
      border: 0.06rem solid var(--text3);
      background-color: var(--surface1);
    }
  }

  .suggestions {
    position: absolute;
    z-index: 1000;
    top: 100%;
    top: calc(100% + 0.3rem);
    right: 0;
    left: 0;
    background-color: var(--text1);
    border-radius: 0.18rem;
    opacity: 1;

    .suggest-item {
      background-color: var(--surface6);
      cursor: pointer;
      user-select: none;

      &.hover {
        background-color: var(--surface1);
        color: var(--text1);
      }

      &.selected {
        background-color: var(--surface4);
        color: var(--text1);
      }
    }

    .misc-item {
      padding: 0.3rem 0.6rem;
    }
  }
}

// Vue Tags Input VUE

// Use this for forms
.ti-new-tag-input-wrapper input {
  font-size: $input-font-size !important;
}

.vue-tags-input {
  min-width: 100%;
  border-color: var(--surface1) !important;
  background-color: var(--surface2) !important;
  border-radius: var(--border-radius1) !important;
  color: var(--text4) !important;

  .ti-new-tag-input {
    background: transparent;
    color: var(--text4);
  }

  .ti-autocomplete {
    background: var(--surface2) !important;
    color: var(--text4);
  }

  .ti-input {
    padding: 0.37rem 0.75rem;
    border-color: var(--surface1) !important;
    background-color: var(--form-bg);
    border-radius: var(--border-radius1);
    &:hover {
      border-color: var(--text3) !important;
    }
  }

  &.ti-disabled .ti-input {
    background-color: var(--surface2) !important;
  }

  &.ti-focus .ti-input {
    // Mimic Bootstrap's default focus behavior
    border-color: var(--text3) !important;

    background-color: var(--form-bg-focus) !important;
    box-shadow: 0 0 0 0.2rem rgba($primary, 0.25);
    color: var(--text4) !important;
  }
}

// vuejs-datepicker
.calendar {
  color: $black;
}

// Sidebar

.sidebar-icon-1 {
  color: var(--sidebar-icon-color1);
}

.sidebar-icon-2 {
  color: var(--sidebar-icon-color2);
}

.sidebar-icon-3 {
  color: var(--sidebar-icon-color3);
}

.wrapper {
  display: flex;
  align-items: stretch;
  padding-left: 15rem;

  &.collapsed {
    display: flex;
    align-items: stretch;
    padding-left: 3.1rem;
  }
}

.sidebar-transition {
  transition: 0.3s ease;
}

#sidebar {
  .sidebar-header {
    padding: 1.3rem 0 0.6rem 0;
    color: var(--text3);
    font-size: 2rem;
  }

  .sidebar-header strong {
    display: none;
    font-size: 1.8em;
  }

  .first-item {
    margin-top: 2rem;
  }
}

.v-sidebar-menu {
  z-index: 100 !important;
  background-color: var(--sidebar-bg) !important;

  &.vsm_collapsed {
    .first-item {
      margin-top: 6rem !important;
    }
  }

  .vsm--link {
    color: var(--sidebar-color) !important;

    &:hover {
      background-color: var(--sidebar-hover-bg) !important;
      border-radius: 0 !important;
      color: var(--sidebar-hover-color) !important;

      .vsm--icon {
        color: var(--sidebar-hover-color) !important;
      }
    }
  }

  // The open menu item
  .vsm--item_open .vsm--link_level-1 {
    background-color: var(--surface3) !important;
  }

  .vsm--link_level-2 {
    background-color: var(--sidebar-bg) !important;
    color: var(--sidebar-color) !important;
  }

  .vsm--link_active {
    background-color: var(--sidebar-active-bg) !important;
    border-radius: 0 !important;
    color: var(--sidebar-active-color) !important;

    .vsm--icon {
      color: var(--sidebar-hover-color) !important;
    }
  }

  .vsm--dropdown .vsm--list {
    background-color: var(--sidebar-bg) !important;
    color: var(--sidebar-color) !important;
  }

  &.vsm_expanded {
    max-width: 15rem !important;
  }

  .vsm--icon {
    background-color: transparent !important;
    &:hover {
      background-color: var(--sidebar-hover-bg) !important;
    }
  }

  .vsm--item {
    background-color: var(--sidebar-bg) !important;
    color: var(--sidebar-color) !important;
  }
}


// Copy button for code
.code-input,
pre[class^="language-"] {
  position: relative;

  &:hover .copy-button {
    opacity: 1;
  }
}

.copy-button {
  position: absolute;
  z-index: 2; // Should be higher than the textarea for code console
  top: .3em;
  right: .2em;
  padding: 0 .5em;
  border: none;
  background: none;
  border-radius: .5em;
  color: #f92aad;
  font-size: .8em;
  opacity: 0;
  text-shadow: 0 0 0.12rem #100c0f, 0 0 0.31rem #dc078e33, 0 0 0.62rem var(--text1);
  transition: opacity 0.3s ease-in-out;

  &:hover {
    filter: drop-shadow(0.12rem 0.12rem 0.62rem #f071c1) drop-shadow(-0.12rem -0.12rem 0.62rem #f071c1);
    opacity: 1;
  }

  &.console {
    right: 2.3em;
  }
}


// Gallery
#gallery {
  li {
    padding: 0.62rem;
    margin: 0.62rem;
    background-color: var(--surface1);
  }

  #surfaces {
    li:nth-child(1) {
      background-color: var(--surface1);
    }
    li:nth-child(2) {
      background-color: var(--surface2);
    }
    li:nth-child(3) {
      background-color: var(--surface3);
    }
    li:nth-child(4) {
      background-color: var(--surface4);
    }
    li:nth-child(5) {
      background-color: var(--surface5);
    }
    li:nth-child(6) {
      background-color: var(--surface6);
    }
    li:nth-child(7) {
      background-color: var(--surface7);
    }
  }
  #texts {
    li:nth-child(1) {
      color: var(--text1);
    }
    li:nth-child(2) {
      color: var(--text2);
    }
    li:nth-child(3) {
      color: var(--text3);
    }
    li:nth-child(4) {
      color: var(--text4);
    }
    li:nth-child(5) {
      color: var(--text5);
    }
    li:nth-child(6) {
      color: var(--text6);
    }
    li:nth-child(7) {
      color: var(--text-disabled);
    }
  }
}
