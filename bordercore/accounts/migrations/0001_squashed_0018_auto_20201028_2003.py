# Generated by Django 2.2.13 on 2020-10-30 22:18

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('accounts', '0001_initial'), ('accounts', '0002_auto_20181013_1722'), ('accounts', '0003_remove_userprofile_favorite_tags'), ('accounts', '0004_auto_20190106_1503'), ('accounts', '0005_auto_20190120_2226'), ('accounts', '0006_remove_userprofile_bookmarks_show_untagged_only'), ('accounts', '0007_auto_20200502_1922'), ('accounts', '0008_userprofile_theme'), ('accounts', '0009_auto_20200829_1939'), ('accounts', '0010_auto_20201026_1501'), ('accounts', '0011_auto_20201028_1652'), ('accounts', '0012_auto_20201028_1744'), ('accounts', '0013_auto_20201028_1919'), ('accounts', '0014_auto_20201028_1920'), ('accounts', '0015_auto_20201028_1921'), ('accounts', '0016_auto_20201028_1948'), ('accounts', '0017_auto_20201028_2002'), ('accounts', '0018_auto_20201028_2003')]

    initial = True

    dependencies = [
        ('blob', '0001_initial'),
        ('tag', '0011_auto_20201028_1301'),
        ('collection', '0001_initial'),
        ('tag', '0001_initial'),
        ('blob', '0003_auto_20200519_1821'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rss_feeds', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('orgmode_file', models.TextField(null=True)),
                ('google_calendar', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('homepage_default_collection', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_collection', to='collection.Collection')),
                ('todo_default_tag', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_tag', to='tag.Tag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('theme', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], default='light', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SortOrderUserTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(default=1)),
                ('note', models.TextField(blank=True, null=True)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag.Tag')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile')),
            ],
            options={
                'ordering': ('sort_order',),
                'unique_together': {('userprofile', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='favorite_tags',
            field=models.ManyToManyField(through='accounts.SortOrderUserTag', to='tag.Tag'),
        ),
        migrations.CreateModel(
            name='SortOrderUserNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(default=1)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blob.Blob')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile')),
            ],
            options={
                'ordering': ('sort_order',),
                'unique_together': {('userprofile', 'note')},
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='favorite_notes',
            field=models.ManyToManyField(through='accounts.SortOrderUserNote', to='blob.Blob'),
        ),
    ]
