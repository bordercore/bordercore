# Generated by Django 2.0.7 on 2018-09-23 21:10

import bookmark.models
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tag', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('url', models.TextField()),
                ('title', models.TextField()),
                ('note', models.TextField(null=True)),
                ('is_pinned', models.BooleanField(default=False)),
                ('daily', bookmark.models.DailyBookmarkJSONField(blank=True, null=True)),
                ('last_check', models.DateTimeField(null=True)),
                ('last_response_code', models.IntegerField(null=True)),
                ('importance', models.IntegerField(default=1)),
                ('tags', models.ManyToManyField(to='tag.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookmarkTagUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookmark_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tag.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
