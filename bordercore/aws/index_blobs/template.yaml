AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Index blobs into ElasticSearch

Globals:
    Function:
        Timeout: 360

Parameters:
  EFSMountPointParameter:
    Type: String
    Description: The EFS mount point on the file system
  EFSAccessPointParameter:
    Type: String
    Description: The EFS access point
  ElasticsearchEndpointParameter:
    Type: String
    Description: The Elasticsearch endpoint
  DRFTokenParameter:
    Type: String
    Description: The Django Rest Framework token used for authentication

Resources:

    IndexBlobFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: .
            FunctionName: IndexBlob
            Handler: index_blobs_lambda.handler
            MemorySize: 10240
            Runtime: python3.7
            Role: !GetAtt IndexBlobLambdaRole.Arn
            VpcConfig:
              SecurityGroupIds:
                - sg-bfa013fe
              # This subnet should match the private subnet created for the NAT gateway,
              #  which I am labeling 'Private Lambda'
              SubnetIds:
                - subnet-09460047abea1c3bd
            Environment:
                Variables:
                    DRF_TOKEN: !Ref DRFTokenParameter
                    EFS_DIR:
                      Ref: EFSMountPointParameter
                    ELASTICSEARCH_ENDPOINT: !Ref ElasticsearchEndpointParameter
            FileSystemConfigs:
                - Arn: !Sub "arn:aws:elasticfilesystem:us-east-1:${AWS::AccountId}:access-point/${EFSAccessPointParameter}"
                  LocalMountPath:
                      Ref: EFSMountPointParameter

    LambdaFunctionLogGroup:
        Type: "AWS::Logs::LogGroup"
        DependsOn: "IndexBlobFunction"
        Properties:
            RetentionInDays: 90
            LogGroupName: !Join ["", ["/aws/lambda/", !Ref IndexBlobFunction]]


    # Add a permission for the lambda to be invoked by S3
    IndexBlobLambdaPermission:
        Type: AWS::Lambda::Permission
        Properties:
            Action: 'lambda:InvokeFunction'
            FunctionName: !Ref IndexBlobFunction
            Principal: s3.amazonaws.com
            SourceArn: !Sub 'arn:aws:s3:::bordercore-blobs'
            SourceAccount: !Ref AWS::AccountId

    IndexBlobLambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: 'Allow'
                      Principal:
                          Service:
                              - 'lambda.amazonaws.com'
                      Action:
                          - 'sts:AssumeRole'

            Policies:
            - PolicyName: LambdaWriteToLogs
              PolicyDocument:
                  Statement:
                      - Effect: 'Allow'
                        Action:
                            - 'logs:CreateLogGroup'
                            - 'logs:CreateLogStream'
                            - 'logs:PutLogEvents'
                            - 'logs:DescribeLogStreams'
                        Resource:
                            - 'arn:aws:logs:*:*:*'
            - PolicyName: LambdaSearchElasticsearch
              PolicyDocument:
                  Statement:
                      - Effect: 'Allow'
                        Action:
                            - 'es:ESHttpPost'
                        Resource:
                            - '*'
            ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole


Outputs:

    IndexBlobFunction:
      Description: "Index blobs into ElasticSearch"
      Value: !GetAtt IndexBlobFunction.Arn
