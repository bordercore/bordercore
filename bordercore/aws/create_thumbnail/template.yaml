AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Create Thumbnails from uploaded blobs

Globals:
    Function:
        Timeout: 900


Parameters:
    EFSMountPointParameter:
        Type: String
        Description: The EFS mount point on the file system
    EFSAccessPointParameter:
        Type: String
        Description: The EFS access point
    SecurityGroupParameter:
        Type: String
        Description: The VPC security group that lambda is in
    Subnet1Parameter:
        Type: String
        Description: The first VPC subnet
    Subnet2Parameter:
        Type: String
        Description: The second VPC subnet

Resources:

    CreateThumbnailFunction:
        Type: AWS::Serverless::Function
        Properties:
            PackageType: Image
            ImageUri: 192218769908.dkr.ecr.us-east-1.amazonaws.com/create-thumbnail-lambda:latest
            FunctionName: CreateThumbnail
            MemorySize: 1024
            Role: !GetAtt CreateThumbnailLambdaRole.Arn
            Environment:
                Variables:
                    BUCKET_NAME: bordercore-blobs
                    EFS_DIR:
                      Ref: EFSMountPointParameter
            VpcConfig:
                SecurityGroupIds:
                    - !Ref SecurityGroupParameter
                SubnetIds:
                    - !Ref Subnet1Parameter
                    - !Ref Subnet2Parameter
            FileSystemConfigs:
                - Arn: !Sub "arn:aws:elasticfilesystem:us-east-1:${AWS::AccountId}:access-point/${EFSAccessPointParameter}"
                  LocalMountPath:
                      Ref: EFSMountPointParameter

    LambdaFunctionLogGroup:
        Type: "AWS::Logs::LogGroup"
        DependsOn: "CreateThumbnailFunction"
        Properties:
            RetentionInDays: 90
            LogGroupName: !Join ["", ["/aws/lambda/", !Ref CreateThumbnailFunction]]

    # Add a permission for the lambda to be invoked by S3
    CreateThumbnailLambdaPermission:
        Type: AWS::Lambda::Permission
        Properties:
            Action: "lambda:InvokeFunction"
            FunctionName: !Ref CreateThumbnailFunction
            Principal: s3.amazonaws.com
            SourceArn: !Sub "arn:aws:s3:::bordercore-blobs"
            SourceAccount: !Ref AWS::AccountId

    CreateThumbnailLambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: "Allow"
                      Principal:
                          Service:
                              - "lambda.amazonaws.com"
                      Action:
                          - "sts:AssumeRole"

            Policies:
            - PolicyName: WriteToS3
              PolicyDocument:
                  Statement:
                      - Effect: "Allow"
                        Action:
                            - s3:PutObject
                        Resource:
                            # TODO: Do we need both lines?
                            - "arn:aws:s3:::bordercore-blobs"
                            - "arn:aws:s3:::bordercore-blobs/*"

            - PolicyName: LambdaWriteToLogs
              PolicyDocument:
                  Statement:
                      - Effect: "Allow"
                        Action:
                            - "logs:CreateLogGroup"
                            - "logs:CreateLogStream"
                            - "logs:PutLogEvents"
                            - "logs:DescribeLogStreams"
                        Resource:
                            - "arn:aws:logs:*:*:*"
            ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole


Outputs:

    CreateThumbnailFunction:
      Description: "Create thumbnails from uploaded blobs"
      Value: !GetAtt CreateThumbnailFunction.Arn
